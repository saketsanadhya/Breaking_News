{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saket\\\\NewsMonkey\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState([0]);\n  const [loading, setLoading] = useState(true);\n\n  const updateNews = async () => {\n    props.setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    props.setProgress(50);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  useEffect(() => {\n    document.title = `${props.category}-NewsMonkey`;\n    updateNews();\n  }, []);\n\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"NewsMonkey - Top \", props.category, \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"zMILn2ZPyU5tQ9Xs6nVMTun0+yk=\");\n\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/saket/NewsMonkey/src/components/News.js"],"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","News","props","articles","setArticles","page","setPage","totalResults","setTotalResults","loading","setLoading","updateNews","setProgress","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","document","title","fetchMoreData","concat","length","map","element","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","string","number"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './Spinner'\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\nconst News=(props)=> {\r\n\r\n    const [articles,setArticles]= useState([])\r\n    const [page,setPage]= useState(1)\r\n    const [totalResults,setTotalResults]= useState([0])\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const updateNews=async()=>{\r\n        props.setProgress(10);\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`; \r\n        setLoading(true)\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        props.setProgress(50);\r\n        setArticles(parsedData.articles)\r\n        setTotalResults(parsedData.totalResults)\r\n        setLoading(false)\r\n        props.setProgress(100);\r\n    }\r\n    useEffect(() => {\r\n        document.title=`${props.category}-NewsMonkey`\r\n        updateNews();\r\n    }, [])\r\n\r\n    const fetchMoreData = async () => {\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\r\n        setPage(page+1) \r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles));\r\n        setTotalResults(parsedData.totalResults);\r\n    };\r\n\r\n        return (\r\n            <>\r\n                <h1 className='text-center'>NewsMonkey - Top {props.category} Headlines</h1>\r\n                {/* {loading && <Spinner/>} */}\r\n                <InfiniteScroll\r\n                    dataLength={articles.length}\r\n                    next={fetchMoreData}\r\n                    hasMore={articles.length !== totalResults}\r\n                    loader={<Spinner />}\r\n                >\r\n                    <div className='container'>\r\n                    <div className='row'>\r\n                        {articles.map((element) => {\r\n                            return <div className='col-md-4' key={element.url}>\r\n                                <NewsItem title={element.title ? element.title : \"\"} description={element.description ? element.description : \"\"} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    </div>\r\n                </InfiniteScroll>\r\n            </>\r\n        )\r\n}\r\n\r\nNews.defaultProps = {\r\n    country: 'in',\r\n    pageSize: 8,\r\n    category: 'general'\r\n}\r\nNews.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string\r\n}\r\n\r\nexport default News\r\n"]},"metadata":{},"sourceType":"module"}